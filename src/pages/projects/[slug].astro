---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content, headings } = await project.render();
const toc = (headings ?? []).filter((h) => h.depth >= 2 && h.depth <= 4);

const statusColors = {
  completed: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',
  'in-progress': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
  archived: 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200',
};
---

<BaseLayout title={`${project.data.title} - codersbox`} description={project.data.description}>
  <main class="py-12">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <article class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
        {project.data.image && (
          <div class="bg-gray-900 h-64 flex items-center justify-center">
            <img src={project.data.image} alt={`${project.data.title} Screenshot`} class="max-w-full max-h-full object-contain" />
          </div>
        )}
        <div class="p-8">
          <!-- Project Header -->
          <header class="mb-8">
            <div class="flex items-center justify-between mb-4">
              <h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-gray-100 leading-tight tracking-tight">{project.data.title}</h1>
              <div class="flex items-center space-x-3">
                {project.data.github && (
                  <a href={project.data.github} target="_blank" rel="noopener noreferrer" class="text-gray-700 dark:text-gray-300 hover:text-black dark:hover:text-white transition-colors">
                    <Icon name="fa6-brands:github" class="text-2xl" />
                  </a>
                )}
                {project.data.demo && (
                  <a href={project.data.demo} target="_blank" rel="noopener noreferrer" class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors">
                    <Icon name="fa6-solid:link" class="text-xl" />
                  </a>
                )}
              </div>
            </div>
            
            <div class="flex items-center gap-4 mb-6">
              <span class={`inline-block text-xs px-3 py-1 rounded-full font-medium uppercase tracking-wide ${statusColors[project.data.status]}`}>
                {project.data.status.replace('-', ' ')}
              </span>
              <span class="text-sm text-gray-500 dark:text-gray-400">
                {project.data.publishDate.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </span>
            </div>
            
            <!-- Tech Stack -->
            <div class="flex flex-wrap gap-2 mb-6">
              {project.data.tech.map((tech) => (
                <span class="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-sm font-medium px-3 py-1 rounded">
                  {tech}
                </span>
              ))}
            </div>
            
            <p class="text-lg text-gray-700 dark:text-gray-300 leading-relaxed">{project.data.description}</p>
          </header>
          
          <!-- Table of Contents (auto-generated from headings) -->
          {toc.length > 0 && (
            <nav class="mb-12 p-6 bg-gray-50 dark:bg-gray-700/50 rounded-lg border border-gray-200 dark:border-gray-600">
              <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                </svg>
                Table of Contents
              </h2>
              <ul class="space-y-2 text-sm">
                {toc.map((h) => (
                  <li>
                    <a href={`#${h.slug ?? ''}`} class={`block text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors ${h.depth === 2 ? '' : h.depth === 3 ? 'pl-4' : 'pl-8'}`}>
                      {h.text}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          )}

          <!-- Project Content -->
          <div class="prose prose-lg dark:prose-invert max-w-none project-content">
            <Content />
          </div>
          
          <!-- Project Footer -->
          <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
              <div class="text-sm text-gray-500 dark:text-gray-400">
                Published on {project.data.publishDate.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </div>
              <div class="flex items-center space-x-4">
                <a href="/projects" class="text-blue-600 dark:text-blue-400 hover:underline text-sm font-medium">
                  ‚Üê Back to Projects
                </a>
              </div>
            </div>
          </footer>
        </div>
      </article>
    </div>
  <!-- Back to Top Button -->
  <button id="back-to-top" aria-label="Back to top"
    class="fixed bottom-6 right-6 z-40 inline-flex items-center justify-center w-12 h-12 rounded-full bg-black text-white shadow-lg transition-all duration-200 hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-gray-900 opacity-0 pointer-events-none">
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
    </svg>
  </button>

  <script>
    // Back to Top button behavior
    (function () {
      const btn = document.getElementById('back-to-top');
      if (!btn) return;
      function onScroll() {
        const show = window.scrollY > 400;
        if (show) {
          btn.classList.remove('opacity-0', 'pointer-events-none');
          btn.classList.add('opacity-100');
        } else {
          btn.classList.add('opacity-0', 'pointer-events-none');
          btn.classList.remove('opacity-100');
        }
      }
      window.addEventListener('scroll', onScroll, { passive: true });
      onScroll();
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });
    })();

    // Add copy-link buttons to headings inside project content
    (function () {
      const root = document.querySelector('.project-content');
      if (!root) return;
      const selector = 'h2, h3, h4';
      const headings = root.querySelectorAll(selector);
      headings.forEach((h) => {
        if (!h.id) return;
        if (h.querySelector('.heading-anchor')) return;
        const btn = document.createElement('button');
        btn.type = 'button';
        btn.className = 'heading-anchor';
        btn.setAttribute('aria-label', 'Copy link to this section');
        btn.innerHTML = `
          <svg class=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">
            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 010 5.656l-3 3a4 4 0 01-5.656-5.656l1.172-1.172M10.172 13.828a4 4 0 010-5.656l3-3a4 4 0 015.656 5.656L17.656 11\"/>
          </svg>`;
        h.appendChild(btn);
        btn.addEventListener('click', async (e) => {
          e.stopPropagation();
          const url = `${location.origin}${location.pathname}#${h.id}`;
          try {
            await navigator.clipboard.writeText(url);
          } catch {
            const temp = document.createElement('input');
            temp.value = url;
            document.body.appendChild(temp);
            temp.select();
            document.execCommand('copy');
            document.body.removeChild(temp);
          }
          if (location.hash !== `#${h.id}`) {
            history.replaceState(null, '', `#${h.id}`);
          }
          btn.classList.add('copied');
          setTimeout(() => btn.classList.remove('copied'), 1200);
        });
      });
    })();
  </script>
  </main>
</BaseLayout>

<style>
  /* Enhanced typography styles for project content */
  .project-content {
    font-family: 'Inter', system-ui, sans-serif;
    color: rgb(55 65 81);
    line-height: 1.75;
  }
  
  .dark .project-content {
    color: #abb2bf; /* One Dark foreground */
  }
  
  /* Custom heading styles with better spacing */
  .project-content :is(h1, h2, h3, h4, h5, h6) {
    scroll-margin-top: 6rem;
    position: relative;
  }
  
  .project-content h1 {
    font-size: 2.25rem;
    line-height: 1.2;
    margin-top: 0;
    margin-bottom: 2rem;
    font-weight: 800;
  }
  
  .project-content h2 {
    font-size: 1.875rem;
    line-height: 1.25;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid rgb(229 231 235);
    font-weight: 700;
    padding-left: 1.5em; /* reserve space for left anchor */
  }
  
  .dark .project-content h2 {
    border-bottom-color: #3e4451; /* One Dark selection background */
  }
  
  .project-content h3 {
    font-size: 1.5rem;
    line-height: 1.3;
    margin-top: 2.5rem;
    margin-bottom: 1.25rem;
    font-weight: 700;
    padding-left: 1.5em; /* reserve space for left anchor */
  }
  
  .project-content h4 {
    font-size: 1.25rem;
    line-height: 1.4;
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
    padding-left: 1.5em; /* reserve space for left anchor */
  }
  
  /* Enhanced code styling */
  .project-content pre {
    position: relative;
    background: #282c34 !important; /* One Dark background */
    border: 1px solid #3e4451; /* One Dark selection background */
    border-radius: 0.75rem;
    padding: 1.5rem;
    margin: 2rem 0;
    overflow-x: auto;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }
  
  .project-content pre code {
    font-family: 'JetBrains Mono', 'Fira Code', Consolas, Monaco, 'Courier New', monospace;
    font-size: 0.875rem;
    line-height: 1.5;
    color: #abb2bf !important; /* One Dark foreground */
    background: transparent !important;
    border: none !important;
    padding: 0 !important;
  }
  
  .project-content :not(pre) > code {
    font-family: 'JetBrains Mono', 'Fira Code', Consolas, Monaco, 'Courier New', monospace;
    font-size: 0.875em;
    font-weight: 600;
    color: rgb(239 68 68) !important;
    background: rgb(243 244 246) !important;
    padding: 0.125rem 0.375rem !important;
    border-radius: 0.375rem !important;
    border: 1px solid rgb(229 231 235) !important;
  }
  
  .dark .project-content :not(pre) > code {
    color: #56b6c2 !important; /* One Dark cyan */
    background: #3e4451 !important; /* One Dark selection background */
    border-color: #3e4451 !important; /* One Dark selection background */
  }

  /* Heading copy-link anchor button */
  .project-content .heading-anchor {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1em;
    height: 1em;
    font-size: 1em;
    line-height: 1;
    color: rgb(156 163 175);
    background: transparent;
    border: none;
    border-radius: 0.25rem;
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity 0.15s ease, color 0.15s ease;
    cursor: pointer;
  }
  .project-content .heading-anchor svg { width: 1em; height: 1em; }
  .project-content .heading-anchor:hover,
  .project-content .heading-anchor:focus-visible {
    color: rgb(37 99 235);
    outline: none;
  }
  .dark .project-content .heading-anchor { color: rgb(107 114 128); }
  .dark .project-content .heading-anchor:hover,
  .dark .project-content .heading-anchor:focus-visible { color: rgb(96 165 250); }
  .project-content :is(h2, h3, h4):hover .heading-anchor,
  .project-content :is(h2, h3, h4):focus-within .heading-anchor {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }
  .project-content .heading-anchor.copied::after {
    content: 'Copied!';
    position: absolute;
    top: -1.75rem;
    left: 0;
    font-size: 0.75rem;
    padding: 0.125rem 0.375rem;
    background: rgb(243 244 246);
    color: rgb(31 41 55);
    border: 1px solid rgb(229 231 235);
    border-radius: 0.25rem;
    white-space: nowrap;
  }
  .dark .project-content .heading-anchor.copied::after {
    background: rgb(31 41 55);
    color: rgb(243 244 246);
    border-color: rgb(55 65 81);
  }
</style>