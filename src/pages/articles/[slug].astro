---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content, headings } = await article.render();
const toc = (headings ?? []).filter((h) => h.depth >= 2 && h.depth <= 4);
---

<BaseLayout title={`${article.data.title} - codersbox`} description={article.data.description}>
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <!-- Article Hero Section -->
    <header class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center">
          <h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-gray-100 leading-tight tracking-tight">
            {article.data.title}
          </h1>
          
          <p class="text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-3xl mx-auto leading-relaxed">
            {article.data.description}
          </p>
          
          <div class="flex flex-wrap justify-center items-center gap-6 text-sm text-gray-500 dark:text-gray-400 mb-6">
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              <span>{article.data.publishDate.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}</span>
            </div>
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>{article.data.readTime}</span>
            </div>
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>By {article.data.author}</span>
            </div>
          </div>
          
          <!-- Tags -->
          <div class="flex flex-wrap justify-center gap-2">
            {article.data.tags.map((tag) => (
              <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-4 py-2 rounded-full text-sm font-medium hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors">
                {tag}
              </span>
            ))}
          </div>
        </div>
      </div>
    </header>

    <!-- Article Content -->
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <article class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
        <div class="px-8 py-12 md:px-12 md:py-16">
          <!-- Table of Contents (auto-generated from headings) -->
          {toc.length > 0 && (
            <nav class="mb-12 p-6 bg-gray-50 dark:bg-gray-700/50 rounded-lg border border-gray-200 dark:border-gray-600">
              <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                </svg>
                Table of Contents
              </h2>
              <ul class="space-y-2 text-sm">
                {toc.map((h) => (
                  <li>
                    <a href={`#${h.slug ?? ''}`} class={`block text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors ${h.depth === 2 ? '' : h.depth === 3 ? 'pl-4' : 'pl-8'}`}>
                      {h.text}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          )}
          
          <!-- Enhanced Article Content with Custom Typography -->
          <div class="prose prose-lg dark:prose-invert max-w-none article-content">
            <Content />
          </div>
        </div>
      </article>

      <!-- Article Navigation/Footer -->
      <footer class="mt-12 bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-8">
        <div class="flex flex-col md:flex-row items-center justify-between gap-6">
          <div class="text-center md:text-left">
            <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">Published on</p>
            <p class="font-semibold text-gray-900 dark:text-gray-100">
              {article.data.publishDate.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </p>
          </div>
          
          <div class="flex items-center gap-4">
            <a 
              href="/articles" 
              class="inline-flex items-center gap-2 px-6 py-3 border border-blue-200 dark:border-blue-700 bg-blue-50 dark:bg-blue-900/40 text-blue-700 dark:text-blue-300 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-800/60 transition-colors font-medium"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              All Articles
            </a>
            
            <button class="inline-flex items-center gap-2 px-6 py-3 bg-black text-white rounded-lg hover:bg-gray-900 dark:hover:bg-gray-700 transition-colors font-medium focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-gray-900">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
              </svg>
              Share Article
            </button>
          </div>
        </div>
      </footer>
    </div>
  </main>

  <!-- Back to Top Button -->
  <button id="back-to-top" aria-label="Back to top"
    class="fixed bottom-6 right-6 z-40 inline-flex items-center justify-center w-12 h-12 rounded-full bg-black text-white shadow-lg transition-all duration-200 hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-gray-900 opacity-0 pointer-events-none">
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
    </svg>
  </button>

  <script>
    // Back to Top button behavior
    (function () {
      const btn = document.getElementById('back-to-top');
      if (!btn) return;
      function onScroll() {
        const show = window.scrollY > 400;
        if (show) {
          btn.classList.remove('opacity-0', 'pointer-events-none');
          btn.classList.add('opacity-100');
        } else {
          btn.classList.add('opacity-0', 'pointer-events-none');
          btn.classList.remove('opacity-100');
        }
      }
      window.addEventListener('scroll', onScroll, { passive: true });
      onScroll();
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });
    })();

    // Add copy-link buttons to headings inside article content
    (function () {
      const root = document.querySelector('.article-content');
      if (!root) return;
      const selector = 'h2, h3, h4';
      const headings = root.querySelectorAll(selector);
      headings.forEach((h) => {
        if (!h.id) return; // rely on Markdown-generated ids
        // Avoid duplicating if script reruns
        if (h.querySelector('.heading-anchor')) return;
        const btn = document.createElement('button');
        btn.type = 'button';
        btn.className = 'heading-anchor';
        btn.setAttribute('aria-label', 'Copy link to this section');
        btn.innerHTML = `
          <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 010 5.656l-3 3a4 4 0 01-5.656-5.656l1.172-1.172M10.172 13.828a4 4 0 010-5.656l3-3a4 4 0 015.656 5.656L17.656 11"/>
          </svg>`;
        // Wrap text if needed to ensure proper positioning
        h.appendChild(btn);
        btn.addEventListener('click', async (e) => {
          e.stopPropagation();
          const url = `${location.origin}${location.pathname}#${h.id}`;
          try {
            await navigator.clipboard.writeText(url);
          } catch {
            // Fallback
            const temp = document.createElement('input');
            temp.value = url;
            document.body.appendChild(temp);
            temp.select();
            document.execCommand('copy');
            document.body.removeChild(temp);
          }
          // Update hash without scrolling abruptly
          if (location.hash !== `#${h.id}`) {
            history.replaceState(null, '', `#${h.id}`);
          }
          // Visual feedback
          btn.classList.add('copied');
          setTimeout(() => btn.classList.remove('copied'), 1200);
        });
      });
    })();
  </script>
</BaseLayout>

<style>
  /* Enhanced typography styles for article content */
  .article-content {
    font-family: 'Inter', system-ui, sans-serif;
    color: rgb(55 65 81);
    line-height: 1.75;
  }
  
  .dark .article-content {
    color: #abb2bf; /* One Dark foreground */
  }
  
  /* Custom heading styles with better spacing */
  .article-content :is(h1, h2, h3, h4, h5, h6) {
    scroll-margin-top: 6rem;
    position: relative;
  }
  
  .article-content h1 {
    font-size: 2.25rem;
    line-height: 1.2;
    margin-top: 0;
    margin-bottom: 2rem;
    font-weight: 800;
  }
  
  .article-content h2 {
    font-size: 1.875rem;
    line-height: 1.25;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid rgb(229 231 235);
    font-weight: 700;
    padding-left: 1.5em; /* reserve space for left anchor */
  }
  
  .dark .article-content h2 {
    border-bottom-color: #3e4451; /* One Dark selection background */
  }
  
  .article-content h3 {
    font-size: 1.5rem;
    line-height: 1.3;
    margin-top: 2.5rem;
    margin-bottom: 1.25rem;
    font-weight: 700;
    padding-left: 1.5em; /* reserve space for left anchor */
  }
  
  .article-content h4 {
    font-size: 1.25rem;
    line-height: 1.4;
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
    padding-left: 1.5em; /* reserve space for left anchor */
  }
  
  /* Enhanced code styling */
  .article-content pre {
    position: relative;
    background: #282c34 !important; /* One Dark background */
    border: 1px solid #3e4451; /* One Dark selection background */
    border-radius: 0.75rem;
    padding: 1.5rem;
    margin: 2rem 0;
    overflow-x: auto;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }
  
  .article-content pre code {
    font-family: 'JetBrains Mono', 'Fira Code', Consolas, Monaco, 'Courier New', monospace;
    font-size: 0.875rem;
    line-height: 1.5;
    color: #abb2bf !important; /* One Dark foreground */
    background: transparent !important;
    border: none !important;
    padding: 0 !important;
  }
  
  .article-content :not(pre) > code {
    font-family: 'JetBrains Mono', 'Fira Code', Consolas, Monaco, 'Courier New', monospace;
    font-size: 0.875em;
    font-weight: 600;
    color: rgb(239 68 68) !important;
    background: rgb(243 244 246) !important;
    padding: 0.125rem 0.375rem !important;
    border-radius: 0.375rem !important;
    border: 1px solid rgb(229 231 235) !important;
  }
  
  .dark .article-content :not(pre) > code {
    color: #56b6c2 !important; /* One Dark cyan */
    background: #3e4451 !important; /* One Dark selection background */
    border-color: #3e4451 !important; /* One Dark selection background */
  }
  
  /* Enhanced blockquotes */
  .article-content blockquote {
    background: linear-gradient(135deg, rgb(248 250 252), rgb(241 245 249));
    border-left: 4px solid rgb(59 130 246);
    margin: 2rem 0;
    padding: 1.5rem 2rem;
    border-radius: 0 0.5rem 0.5rem 0;
    font-style: italic;
    position: relative;
    box-shadow: 0 2px 4px rgb(0 0 0 / 0.05);
  }
  
  .dark .article-content blockquote {
    background: #3e4451; /* One Dark selection background */
    border-left-color: #61afef; /* One Dark blue */
  }
  
  .article-content blockquote::before {
    content: '"';
    font-size: 4rem;
    color: rgb(59 130 246);
    opacity: 0.3;
    position: absolute;
    top: 0.5rem;
    left: 1rem;
    font-family: serif;
  }
  
  /* Enhanced lists */
  .article-content ul > li::marker {
    color: rgb(59 130 246);
  }
  
  .article-content ol > li::marker {
    color: rgb(59 130 246);
    font-weight: 600;
  }
  
  /* Enhanced tables */
  .article-content table {
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 1px 3px rgb(0 0 0 / 0.1);
    border: 1px solid rgb(229 231 235);
  }
  
  .dark .article-content table {
    border-color: rgb(55 65 81);
  }
  
  .article-content thead th {
    background: rgb(249 250 251);
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.05em;
    color: rgb(55 65 81);
  }
  
  .dark .article-content thead th {
    background: rgb(31 41 55);
    color: rgb(209 213 219);
  }
  
  /* Enhanced images */
  .article-content img {
    border-radius: 0.75rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
    border: 1px solid rgb(229 231 235);
  }
  
  .dark .article-content img {
    border-color: rgb(55 65 81);
  }

  /* Heading copy-link anchor button */
  .article-content .heading-anchor {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1em;   /* match heading font-size */
    height: 1em;  /* match heading font-size */
    font-size: 1em; /* inherit size from heading */
    line-height: 1;
    color: rgb(156 163 175); /* gray-400 muted */
    background: transparent;
    border: none;
    border-radius: 0.25rem;
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity 0.15s ease, color 0.15s ease;
    cursor: pointer;
  }
  .article-content .heading-anchor svg {
    width: 1em;
    height: 1em;
  }
  .article-content .heading-anchor:hover,
  .article-content .heading-anchor:focus-visible {
    color: rgb(37 99 235); /* blue-600 */
    outline: none;
  }
  .dark .article-content .heading-anchor {
    color: rgb(107 114 128); /* gray-500 muted in dark */
  }
  .dark .article-content .heading-anchor:hover,
  .dark .article-content .heading-anchor:focus-visible {
    color: rgb(96 165 250); /* blue-400 */
  }
  .article-content :is(h2, h3, h4):hover .heading-anchor,
  .article-content :is(h2, h3, h4):focus-within .heading-anchor {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }
  .article-content .heading-anchor.copied::after {
    content: 'Copied!';
    position: absolute;
    top: -1.75rem;
    left: 0;
    font-size: 0.75rem;
    padding: 0.125rem 0.375rem;
    background: rgb(243 244 246);
    color: rgb(31 41 55);
    border: 1px solid rgb(229 231 235);
    border-radius: 0.25rem;
    white-space: nowrap;
  }
  .dark .article-content .heading-anchor.copied::after {
    background: rgb(31 41 55);
    color: rgb(243 244 246);
    border-color: rgb(55 65 81);
  }
  
  /* Link hover effects */
  .article-content a:hover {
    background: linear-gradient(135deg, rgb(147 197 253), rgb(96 165 250));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient-shift 0.3s ease-in-out;
  }
  
  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
  }
</style>